{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport NavBar from \"@/Components/NavBar.vue\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      users: [],\n      //users из API\n      dishes: [],\n      //dish из API\n      selectedUser: null,\n      // выбранный user из выпадающего списка\n      selectedDish: null,\n      // выбранное dish из выпадающего списка\n      selectedDate: null,\n      // выбранная дата из input'а с датой\n      dish_posts: [] // список блюд\n    };\n  },\n\n  mounted() {\n    axios.get('http://127.0.0.1:8000/api/user_view/').then(response => {\n      this.users = response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n    axios.get('http://127.0.0.1:8000/api/dish_view/').then(response => {\n      this.dishes = response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  components: {\n    NavBar\n  },\n  methods: {\n    addDishPost() {\n      if (this.selectedDish != null) {\n        if (this.dish_posts.some(item => item.dish_name === this.selectedDish) === false) {\n          this.dish_posts.push({\n            dish_name: this.dishes.find(item => item.dish_name === this.selectedDish)['dish_name'],\n            dish_compose: this.dishes.find(item => item.dish_name === this.selectedDish)['dish_compose'],\n            dish_price: this.dishes.find(item => item.dish_name === this.selectedDish)['dish_price'],\n            pk: this.dishes.find(item => item.dish_name === this.selectedDish)['pk'],\n            dish_count: 1\n          });\n        } else {\n          alert('Вы уже добавили этот товар');\n        }\n      } else {\n        alert('Вы не добавили блюдо');\n      }\n    },\n    deleteDishPost(index) {\n      this.dish_posts.splice(index, 1);\n    },\n    incrementCountDish(index) {\n      this.dish_posts[index].dish_count += 1;\n    },\n    decrementCountDish(index) {\n      if (this.dish_posts[index].dish_count >= 2) {\n        this.dish_posts[index].dish_count -= 1;\n      }\n    },\n    sendUsersChoice() {\n      if (this.dish_posts.length > 0 && this.selectedUser != null && this.selectedDate != null) {\n        axios.post('http://127.0.0.1:8000/api/put_users_choice/', {\n          'user_name': this.selectedUser,\n          'dish_list': this.dish_posts,\n          'order_date': this.selectedDate\n        }).then(response => {\n          console.log(response);\n          console.log('Все норм :)');\n        }).catch(error => {\n          console.log(error);\n        });\n        alert('Вы успешно оформили заказ :)');\n        location.reload();\n      } else {\n        alert('Вы ввели не все данные.\\nПожалуйста, проверьте форму на заполнение всех данных');\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","axios","data","users","dishes","selectedUser","selectedDish","selectedDate","dish_posts","mounted","get","then","response","catch","error","console","log","components","methods","addDishPost","some","item","dish_name","push","find","dish_compose","dish_price","pk","dish_count","alert","deleteDishPost","index","splice","incrementCountDish","decrementCountDish","sendUsersChoice","length","post","location","reload"],"sources":["/home/yaroslav/EatAppf/project/eat_app_front/src/pages/Order.vue"],"sourcesContent":["<template>\n    <NavBar/>\n    <h1 class=\"page_category\">Заказ</h1>\n    <div class=\"block_content\">\n        <div class=\"d-flex flex-row\">\n            <form @submit.prevent class=\"privet\">\n                <div class=\"select_user\">\n                    <p>Выберите сотрудника:&nbsp</p>\n                    <select v-model=\"selectedUser\">\n                        <option v-for=\"user in users\" v-bind:value=\"user.user_name\">{{user.user_name}}</option>\n                    </select>\n                </div>\n\n                <div class=\"select_data\">\n                    <p>Выберите дату заказа:&nbsp</p>\n                    <input type=\"date\" v-model=\"selectedDate\">\n                </div>\n\n                <div class=\"select_dish\">\n                    <p>Выберите блюдо:&nbsp</p>\n                    <select v-model=\"selectedDish\" id=\"dish_item\">\n                        <option disabled value=\"\">Выберите товар</option>\n                        <option v-for=\"dish in dishes\" :key=\"dish.pk\" :value=\"dish.dish_name\">\n                            {{ dish.dish_name }}\n                        </option>\n                    </select>\n                    <span v-if=\"selectedDish\">&nbsp&nbsp{{ dishes.find(dish => dish.dish_name === selectedDish).dish_price }}₽</span>\n                    <div v-if=\"selectedDish\" class=\"compound\">Состав: <br/> {{ dishes.find(dish => dish.dish_name === selectedDish).dish_compose }}</div>\n                </div>\n\n                <button @click=\"addDishPost\">Добавить блюдо</button>\n                <div class=\"primary_button\">\n                    <button class=\"bg-primary text-white\" v-if=\"this.dish_posts.length\" @click=\"sendUsersChoice\">Заказать</button>\n                </div>\n            </form>\n            <div class=\"p-2\" v-if=\"this.dish_posts.length\">\n                <div class=\"dish_posts\">\n                    <div v-for=\"(dish, index) in dish_posts\" :key=\"index\">\n                        <div class=\"dish\">\n                            <div class=\"dish_name\"><h4>Название блюда: <br/> {{ dish.dish_name }}</h4></div>\n                            <div>Цена блюда: {{ dish.dish_price }}₽</div>\n                            <div class=\"dish_count\">\n                                <div>Кол-во: {{ dish.dish_count }}</div>\n                                <button class=\"count_button\" @click=\"incrementCountDish(index)\">+</button>\n                                <button class=\"count_button\" @click=\"decrementCountDish(index)\">-</button>\n                            </div>\n                            <div>\n                                <button class=\"bg-light text-dark\" @click=\"deleteDishPost(index)\">Удалить товар</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport NavBar from \"@/Components/NavBar.vue\";\nimport axios from \"axios\";\n\nexport default {\n    data() {\n        return {\n            users: [], //users из API\n            dishes: [], //dish из API\n            selectedUser: null, // выбранный user из выпадающего списка\n            selectedDish: null, // выбранное dish из выпадающего списка\n            selectedDate: null, // выбранная дата из input'а с датой\n            dish_posts: [], // список блюд\n        };\n    },\n\n    mounted() {\n        axios.get('http://127.0.0.1:8000/api/user_view/')\n            .then(response => {\n                this.users = response.data\n            })\n            .catch(error => {\n                console.log(error);\n        })\n        axios.get('http://127.0.0.1:8000/api/dish_view/')\n            .then(response => {\n                this.dishes = response.data\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    },\n    components: {NavBar},\n    methods: {\n        addDishPost() {\n            if (this.selectedDish != null){\n                if (this.dish_posts.some(item => item.dish_name === this.selectedDish) === false) {\n                    this.dish_posts.push({\n                        dish_name: this.dishes.find(item => item.dish_name === this.selectedDish)['dish_name'],\n                        dish_compose: this.dishes.find(item => item.dish_name === this.selectedDish)['dish_compose'],\n                        dish_price: this.dishes.find(item => item.dish_name === this.selectedDish)['dish_price'],\n                        pk: this.dishes.find(item => item.dish_name === this.selectedDish)['pk'],\n                        dish_count: 1,\n                    })\n                } else{\n                    alert('Вы уже добавили этот товар')\n                }\n            }else{\n                alert('Вы не добавили блюдо')\n            }\n        },\n        deleteDishPost(index) {\n            this.dish_posts.splice(index, 1)\n        },\n        incrementCountDish(index) {\n            this.dish_posts[index].dish_count += 1\n        },\n        decrementCountDish(index) {\n            if (this.dish_posts[index].dish_count >= 2){\n                this.dish_posts[index].dish_count -= 1\n            }\n        },\n\n        sendUsersChoice() {\n            if (this.dish_posts.length > 0 && this.selectedUser != null && this.selectedDate != null){\n                axios.post('http://127.0.0.1:8000/api/put_users_choice/', {\n                    'user_name': this.selectedUser,\n                    'dish_list': this.dish_posts,\n                    'order_date': this.selectedDate\n                })\n                    .then(response => {\n                        console.log(response)\n                        console.log('Все норм :)')\n                    })\n                    .catch(error => {\n                        console.log(error)\n                    })\n                alert('Вы успешно оформили заказ :)')\n                location.reload();\n            }else{\n                alert('Вы ввели не все данные.\\nПожалуйста, проверьте форму на заполнение всех данных')\n            }\n        },\n    }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n\n.dish_name{\n    white-space: nowrap;\n    word-wrap: break-word;\n}\n.compound{\n    margin-top: 10px;\n    width: 170px;\n    word-wrap: break-wordж\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}