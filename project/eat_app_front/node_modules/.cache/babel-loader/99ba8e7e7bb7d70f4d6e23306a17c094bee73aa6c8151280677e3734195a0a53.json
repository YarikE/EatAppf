{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"page_category\"\n}, \"Order\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_NavBar), _hoisted_1], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_createVNode","_component_NavBar","_hoisted_1"],"sources":["C:\\projects\\приложение для заказа корпоративной еды\\project\\eat_app_front\\src\\pages\\Order.vue"],"sourcesContent":["<template>\r\n    <NavBar/>\r\n    <h1 class=\"page_category\">Order</h1>\r\n</template>\r\n\r\n<script>\r\nimport NavBar from \"@/Components/NavBar.vue\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    data() {\r\n    return {\r\n        items: [], // полученные данные из POST запроса\r\n        selectedValue: null // выбранное значение из списка\r\n    };\r\n    },\r\n        methods: {\r\n        async sendPostRequest() {\r\n        const response = await fetch('url', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ selectedValue: this.selectedValue })\r\n    });\r\n        const data = await response.json();\r\n        // обработка полученных данных\r\n    }\r\n    },\r\n        async mounted() {\r\n            axios.get('http://127.0.0.1:8000/api/user_view/')\r\n                .then(response => {\r\n                    this.users = response.data\r\n                    console.log(this.users)\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n        })\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>"],"mappings":";gCAEIA,mBAAA,CAAoC;EAAhCC,KAAK,EAAC;AAAe,GAAC,OAAK;;;;6DAD/BC,YAAA,CAASC,iBAAA,GACTC,UAAoC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}