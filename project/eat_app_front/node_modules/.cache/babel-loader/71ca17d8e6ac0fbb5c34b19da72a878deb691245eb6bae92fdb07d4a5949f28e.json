{"ast":null,"code":"import NavBar from \"@/Components/NavBar.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      users: [],\n      dish_posts: [],\n      selectedUser: null,\n      max_dish_count: null,\n      dish_count_choice: 1,\n      selectedDate: null\n    };\n  },\n  mounted() {\n    axios.get('http://127.0.0.1:8000/api/user_view/').then(response => {\n      this.users = response.data;\n    }).catch(error => {\n      console.log(error);\n    });\n    axios.get('http://127.0.0.1:8000/api/dish_view/').then(response => {\n      this.max_dish_count = response.data.length;\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  methods: {\n    incrementCountDishChoice() {\n      if (this.dish_count_choice < this.max_dish_count) {\n        this.dish_count_choice += 1;\n      }\n    },\n    decrementCountDishChoice() {\n      if (this.dish_count_choice > 1) {\n        this.dish_count_choice -= 1;\n      }\n    },\n    get_random_order() {\n      axios.post('http://127.0.0.1:8000/api/random_dish/', {\n        'dish_count_choice': this.dish_count_choice\n      }).then(response => {\n        console.log(response.data.dish_list);\n        this.dish_posts = response.data.dish_list;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    incrementCountDish(index) {\n      this.dish_posts[index].dish_count += 1;\n    },\n    decrementCountDish(index) {\n      if (this.dish_posts[index].dish_count >= 2) {\n        this.dish_posts[index].dish_count -= 1;\n      }\n    },\n    sendUsersChoice() {\n      if (this.dish_posts.length > 0 && this.selectedUser != null && this.selectedDate != null) {\n        axios.post('http://127.0.0.1:8000/api/put_users_choice/', {\n          'user_name': this.selectedUser,\n          'dish_list': this.dish_posts,\n          'order_date': this.selectedDate\n        }).then(response => {\n          console.log(response);\n          console.log('Все норм :)');\n        }).catch(error => {\n          console.log(error);\n        });\n        alert('Вы успешно оформили заказ :)');\n        location.reload();\n      } else {\n        alert('Вы ввели не все данные.\\nПожалуйста, проверьте форму на заполнение всех данных');\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","axios","components","data","users","dish_posts","selectedUser","max_dish_count","dish_count_choice","selectedDate","mounted","get","then","response","catch","error","console","log","length","methods","incrementCountDishChoice","decrementCountDishChoice","get_random_order","post","dish_list","incrementCountDish","index","dish_count","decrementCountDish","sendUsersChoice","alert","location","reload"],"sources":["/home/yaroslav/EatAppf/project/eat_app_front/src/pages/Lucky.vue"],"sourcesContent":["<template>\n    <NavBar/>\n    <h1 class=\"page_category\">Режим \"Мне повезет\"</h1>\n    <div class=\"block_content\">\n        <div class=\"d-flex\">\n            <form class=\"align-self-start\">\n                <div class=\"select_user\">\n                    <p>Выберите сотрудника:&nbsp</p>\n                    <select v-model=\"selectedUser\">\n                        <option v-for=\"user in users\" v-bind:value=\"user.user_name\">{{user.user_name}}</option>\n                    </select>\n                </div>\n\n                <div class=\"select_data\">\n                    <p>Выберите дату заказа:&nbsp</p>\n                    <input type=\"date\" v-model=\"selectedDate\">\n                </div>\n\n                <div class=\"dish_count\">\n                    <button class=\"count_button\" @click=\"incrementCountDishChoice(this.dish_count_choice)\">+</button>\n                    <p>Кол-во блюд: {{ this.dish_count_choice }}</p>\n                    <button class=\"count_button\" @click=\"decrementCountDishChoice(this.dish_count_choice)\">-</button>\n                </div>\n\n                <button @click=\"get_random_order\">Мне повезет</button>\n                <div class=\"primary_button\">\n                    <button class=\"bg-primary text-white\" v-if=\"this.dish_posts.length\" @click=\"sendUsersChoice\">Заказать</button>\n                </div>\n            </form>\n\n            <div class=\"p-2\">\n                <div class=\"dish_posts\">\n                    <div v-for=\"(dish, index) in dish_posts\" :key=\"index\">\n                        <div class=\"dish\">\n                            <div><h3>Название блюда: {{ dish.dish_name }}</h3></div>\n                            <div><h4>Цена блюда: {{ dish.dish_price }} ₽</h4></div>\n                            <div class=\"dish_count\">\n                                <div>Кол-во: {{ dish.dish_count }} &nbsp&nbsp</div>\n                                <button class=\"count_button\" @click=\"incrementCountDish(index)\">+</button>\n                                <button class=\"count_button\" @click=\"decrementCountDish(index)\">-</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport NavBar from \"@/Components/NavBar.vue\";\nimport axios from \"axios\";\n\nexport default {\n    components: {NavBar},\n    data() {\n        return {\n            users: [],\n            dish_posts: [],\n            selectedUser: null,\n            max_dish_count: null,\n            dish_count_choice: 1,\n            selectedDate: null,\n        }\n    },\n    mounted() {\n        axios.get('http://127.0.0.1:8000/api/user_view/')\n            .then(response => {\n                this.users = response.data\n            })\n            .catch(error => {\n                console.log(error);\n            })\n        axios.get('http://127.0.0.1:8000/api/dish_view/')\n            .then(response => {\n                this.max_dish_count = response.data.length\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    },\n    methods: {\n        incrementCountDishChoice(){\n            if (this.dish_count_choice < this.max_dish_count){\n                this.dish_count_choice += 1;\n            }\n        },\n        decrementCountDishChoice() {\n            if (this.dish_count_choice > 1){\n                this.dish_count_choice -= 1;\n          }\n        },\n        get_random_order(){\n            axios.post('http://127.0.0.1:8000/api/random_dish/', {'dish_count_choice': this.dish_count_choice})\n                .then(response => {\n                    console.log(response.data.dish_list)\n                    this.dish_posts = response.data.dish_list\n                })\n                .catch(error => {\n                    console.log(error)\n                })\n        },\n        incrementCountDish(index) {\n            this.dish_posts[index].dish_count += 1\n        },\n        decrementCountDish(index) {\n            if (this.dish_posts[index].dish_count >= 2){\n                this.dish_posts[index].dish_count -= 1\n            }\n        },\n        sendUsersChoice() {\n            if (this.dish_posts.length > 0 && this.selectedUser != null && this.selectedDate != null){\n                axios.post('http://127.0.0.1:8000/api/put_users_choice/', {\n                    'user_name': this.selectedUser,\n                    'dish_list': this.dish_posts,\n                    'order_date': this.selectedDate\n                })\n                    .then(response => {\n                        console.log(response)\n                        console.log('Все норм :)')\n                    })\n                    .catch(error => {\n                        console.log(error)\n                    })\n                alert('Вы успешно оформили заказ :)')\n                location.reload();\n            }else{\n                alert('Вы ввели не все данные.\\nПожалуйста, проверьте форму на заполнение всех данных')\n            }\n        },\n\n    },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}